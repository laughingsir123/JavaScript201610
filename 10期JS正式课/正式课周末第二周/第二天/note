1.试题分析：
1）==比较：隐式数据类型的转换
    []==false: 对象==布尔值 最终都转成数字
    []-》toString() ''->0;
    false->0
    其他数据类型转为Number数据类型
    转换方法：1.严格转换Number() 2.非严格转换 parseInt() parseFloat()
    转换规律：
        1）布尔值 true:1; false:0;
        2)null:0 undefined:NaN;
        3)[] 先通过toString()转成‘’,然后''转成0；
2）![]==false; []true -》取反 false
.......................................................................
1.什么是正则？ 正则就是用来操作（匹配和捕获） 字符串 的一系列 规则 ；
匹配：验证字符串是否符合我的规则； 返回值-》布尔值 test（） /^2\d{2}$/.test(xml.status)
捕获：把符合我们规则的字符串拎出来；返回值：符合规则的小字符串； exec() match() replace();
注意：正则只跟字符串打交道；
2.正则如何创建；两种方式：1.字面量 2.实例
3.字面量创建和实例创建的区别：
1）字面量创建不需要转义，而实例创建，需要转义； \d -> \\d;
2)字面量创建无法拼接变量，但是实例创建可以拼接变量；
4.正则由两部分组成： 元字符 + 修饰符
元字符：放在两个斜杠中间的，都是元字符
    包含两块：
        1)代表特殊含义的元字符；
        \ | () . \n \b ^ $
        \s  \d \w
        \S  \D \W
        [abc] [^abc]
        [a-z] [^a-z]
        2）代表次数的量词元字符；
        * 0到多
        + 1到多
        ? 0次或1次
        {n} 正好n次
        {n,} n到多次
        {n,m} n次到m次；
修饰符：放在斜杠外面的；
    g 全局
    i 忽略大小写
    m 换行
5.中括号的用法： []
1)在[]中，像. * + - _等没有特殊含义；
2）[]只有一位，不存在两位；
6.小括号的作用：
1）分组的作用
2）提高优先级
3)只匹配不捕获 (?:)
7.捕获：exec，match，replace
8.exec：把符合正则的内容以一个数组的形式返回；
    这个数组中，如果没有小分组的时候，数组的长度为3：
        数组第1项：符合大正则的字符串；
        数组第2项：索引
        数组第3项：原始字符串
    这个数组中，如果有小分组，小分组从数组的第二位开始；
当找不到内容的时候，返回null;

9.lastIndex:从哪个索引位置开始查找；一开始从索引0开始找，如果给正则添加了全局g，每次都找到内容的下一项内容的索引开始找；
10.正则捕获的特点：
1）懒惰性 - 解决措施:添加全局g;
2)贪婪性 - 解决措施：在量词元字符后面加?    +?
11.？的总结
1）可有可无 ？
2）解决正则贪婪性 +?
3)只匹配不捕获 (?:)
12.关于exec和match的区别：
exec有小分组，match只能匹配大正则，不能拿到小分组；










